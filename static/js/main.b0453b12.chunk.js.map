{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","helpers.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","setMovies","useState","newTitle","setTitle","film","setFilm","hasLoadingError","setLoadingError","showError","setShowError","findFilm","a","breakPoint","fetch","then","response","json","newFilm","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","some","slice","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0453b12.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbUrl}/`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { getFilm } from '../../helpers';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ setMovies }) => {\n  const [newTitle, setTitle] = useState('');\n  const [film, setFilm] = useState(null);\n  const [hasLoadingError, setLoadingError] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  const findFilm = async() => {\n    const newFilm = await getFilm(newTitle);\n\n    if (newFilm.Title) {\n      setFilm({\n        title: newFilm.Title,\n        description: newFilm.Plot,\n        imgUrl: newFilm.Poster,\n        imdbUrl: newFilm.imdbID,\n      });\n      setLoadingError(true);\n      setShowError(false);\n      setTitle('');\n    } else {\n      setLoadingError(false);\n      setShowError(true);\n    }\n  };\n\n  const setNewMovieToList = () => {\n    if (!film) {\n      return;\n    }\n\n    setMovies(movies => (\n      (!movies.some(movie => movie.imdbUrl.slice(-9) === film.imdbUrl)\n        ? [...movies, film] : movies)\n    ));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          setTitle('');\n          setNewMovieToList();\n        }\n        }\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': showError })}\n              value={newTitle}\n              onChange={(event) => {\n                setTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {showError\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={\n                () => {\n                  findFilm();\n                }\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n\n        {hasLoadingError\n        && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              title={film.title}\n              description={film.description}\n              imgUrl={film.imgUrl}\n              imdbUrl={film.imdbUrl}\n            />\n          </>\n        )\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  setMovies: PropTypes.func.isRequired,\n};\n","const titleUrl = 'https://www.omdbapi.com/?apikey=de242cb8&t=';\n\nexport const getFilm = breakPoint => (\n  fetch(`${titleUrl}${breakPoint}`).then(response => response.json())\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}